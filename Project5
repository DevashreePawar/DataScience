import pandas as pd

from sklearn.ensemble import RandomForestClassifier
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
from sklearn.naive_bayes import MultinomialNB
from sklearn.tree import DecisionTreeClassifier
from sklearn.feature_extraction.text import CountVectorizer

rf= RandomForestClassifier(random_state=1)
mnb=MultinomialNB()
dt=DecisionTreeClassifier(random_state=0)

d_c=["brazalian","british","cajun_creole","chinese","filipino","french","greek","indian"]
df=pd.read_json("C:/Users/devup/OneDrive/Desktop/train.json")
print(df)

print(df['cuisine'].unique())
x=df['ingredients']
y=df['cuisine'].apply(d_c.index)

df['all_ingredients']=df['ingredients'].map(";".join)

cv=CountVectorizer()
X=cv.fit_transform(df['all_ingredients'].values)

x_train,x_test,y_train,y_test=train_test_split(X,y,random_state=0,test_size=0.3)


train1=rf.fit(x_train,y_train)
y_pred1=rf.predict(x_test)
print("Random forest = ")
print(accuracy_score(y_test,y_pred1))

train2=dt.fit(x_train,y_train)
y_pred2=dt.predict(x_test)
print("Decision tree = ")
print(accuracy_score(y_test,y_pred2))


train5=mnb.fit(x_train,y_train)
y_pred5=mnb.predict(x_test)
print("Multinomial Naive bayes = ")
print(accuracy_score(y_test,y_pred5))
